kind: Template
apiVersion: v1
metadata:
  name: yii-postgresql-persistent
  annotations:
    openshift.io/display-name: "Yii Framework + PostgreSQL"
    tags: "quickstart,php,yii"
    iconClass: icon-php
    openshift.io/documentation-url: "https://github.com/mosen/openshift-templates"
objects:
  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${NAME}"
    stringData:
      databasePassword: "${DATABASE_PASSWORD}"
      databaseUser: "${DATABASE_USER}"
  - kind: Service
    apiVersion: v1
    metadata:
      annotations:
        description: "Exposes and load balances the Yii application pods"
      name: "${NAME}"
    spec:
      ports:
        - name: web
          port: 80
          targetPort: 8080
      selector:
        name: "${NAME}"
  - kind: Route
    apiVersion: v1
    metadata:
      name: "${NAME}"
    spec:
      host: "${APPLICATION_DOMAIN}"
      to:
        kind: Service
        name: "${NAME}"
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: Keeps track of changes in the application image
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: Defines how to build the application
    spec:
      source:
        type: Git
        git:
          uri: "${SOURCE_REPOSITORY_URL}"
          ref: "${SOURCE_REPOSITORY_REF}"
        contextDir: "${CONTEXT_DIR}"
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            namespace: "${NAMESPACE}"
            name: "php:7.0"
          env:
            name: COMPOSER_MIRROR
            value: "${COMPOSER_MIRROR}"
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}:latest"
      triggers:
      - type: ImageChange
      - type: ConfigChange
      - type: GitHub
        github:
          secret: "${GITHUB_WEBHOOK_SECRET}"
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: "${DATABASE_SERVICE_NAME}"
    spec:
      accessModes: ['ReadWriteOnce']
      resources:
        requests:
          storage: "${VOLUME_CAPACITY}"
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${NAME}"
      annotations:
        description: Defines how to deploy the application server
    spec:
      strategy:
        type: Recreate
        recreateParams:
          pre:
            failurePolicy: Retry
            execNewPod:
              command:
                - ./migrate-database.sh
              containerName: "yii-postgresql-persistent"
      triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: True
          containerNames:
          - yii-postgresql-persistent
          from:
            kind: ImageStreamTag
            name: "${NAME}:latest"
      - type: ConfigChange
      replicas: 1
      selector:
        name: "${NAME}"
      template:
        metadata:
          name: "${NAME}"
          labels:
            name: "${NAME}"
        spec:
          containers:
          - name: yii-postgresql-persistent
            image: "${NAME}"
            ports:
            - containerPort: 80
            livenessProbe:
              timeoutSeconds: 3
              initialDelaySeconds: 30
              httpGet:
                path: /
                port: 80
            env:
            - name: CLUSTER_NAME
              value: "${CLUSTER_NAME}"
            - name: ROUTER_SHARD
              value: "${ROUTER_SHARD}"
            - name: DB_SERVICE_NAME
              value: "${DATABASE_SERVICE_NAME}"
            - name: DB_CONNECTION
              value: "${DATABASE_ENGINE}"
            - name: "DB_DATABASE"
              value: "${DATABASE_NAME}"
            - name: "DB_USERNAME"
              value: "${DATABASE_USER}"
            - name: "DB_PASSWORD"
              value: "${DATABASE_PASSWORD}"
            - name: "YII_ENV"
              value: "${YII_ENV}"
            resources:
              limits:
                memory: "${MEMORY_LIMIT}"
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${DATABASE_SERVICE_NAME}"
      annotations:
        description: "Exposes the database server"
    spec:
      ports:
      - name: postgresql
        port: 5432
        targetPort: 5432
      selector:
        name: "${DATABASE_SERVICE_NAME}"
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${DATABASE_SERVICE_NAME}"
      annotations:
        description: Defines how to deploy the database
    spec:
      strategy:
        type: Recreate
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: True
            containerNames:
            - postgresql
            from:
              kind: ImageStreamTag
              namespace: "${NAMESPACE}"
              name: "postgresql:9.5"
        - type: ConfigChange
      replicas: 1
      selector:
        name: "${DATABASE_SERVICE_NAME}"
      template:
        metadata:
          name: "${DATABASE_SERVICE_NAME}"
          labels:
            name: "${DATABASE_SERVICE_NAME}"
        spec:
          containers:
            - name: postgresql
              image: postgresql
              ports:
                - containerPort: 5432
              readinessProbe:
                timeoutSeconds: 1
                initialDelaySeconds: 5
                exec:
                  command:
                    - /bin/sh
                    - "-i"
                    - "-c"
                    - "psql -h 127.0.0.1 -U ${DATABASE_USER} -q -d ${DATABASE_NAME} -c 'SELECT 1'"
              livenessProbe:
                timeoutSeconds: 1
                initialDelaySeconds: 30
                tcpSocket:
                  port: 5432
              env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${NAME}"
                      key: databaseUser
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${NAME}"
                      key: databasePassword
                - name: POSTGRESQL_DATABASE
                  value: "${DATABASE_NAME}"
              resources:
                limits:
                  memory: "${MEMORY_POSTGRESQL_LIMIT}"
              volumeMounts:
                - name: "${DATABASE_SERVICE_NAME}-data"
                  mountPath: /var/lib/pgsql/data
          volumes:
            - name: "${DATABASE_SERVICE_NAME}-data"
              persistentVolumeClaim:
                claimName: "${DATABASE_SERVICE_NAME}"    
    
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: True
  value: yii-postgresql-persistent
- name: NAMESPACE
  displayName: Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  required: True
  value: openshift
- name: SOURCE_REPOSITORY_URL
  displayName: Git Repository URL
  description: The URL of the repository with your application source code.
  required: True
- name: SOURCE_REPOSITORY_REF
  displayName: Git Reference
  description: Set this to a branch name, tag or other ref of your repository if you are not using the default branch.
- name: YII_ENV
  displayName: Yii Application Environment
  description: Determines the 'environment' your application is currently.
  required: True
  value: dev
- name: COMPOSER_MIRROR
  displayName: Custom Composer Mirror URL
  description: The custom Composer mirror URL
  value: ""
- name: CLUSTER_NAME
  displayName: Cluster Name
  description: The name of your current OpenShift cluster (console.CLUSTER_NAME.openshift.com).
  required: True
  value: preview
- name: ROUTER_SHARD
  displayName: Router Shard
  description: The router shard used by routes in your current OpenShift cluster (http://PROJECT_NAME-APPLICATION_NAME.ROUTER_SHARD.CLUSTER_NAME.openshiftapps.com/).
  required: True
  value: 44fs
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the Yii container can use.
  required: True
  value: 512Mi
- name: MEMORY_POSTGRESQL_LIMIT
  displayName: Memory Limit (PostgreSQL)
  description: Maximum amount of memory the PostgreSQL container can use.
  required: True
  value: 512Mi
- name: VOLUME_CAPACITY
  displayName: Volume Capacity
  description: Volume space available for data, e.g. 512Mi, 2Gi
  required: True
  value: 1Gi
- name: CONTEXT_DIR
  displayName: Context Directory
  description: Set this to the relative path to your project if it is not in the root of your repository.
- name: APPLICATION_DOMAIN
  displayName: Application Hostname
  description: The exposed hostname that will route to the Laravel service, if left blank a value will be defaulted.
  value: ""
- name: GITHUB_WEBHOOK_SECRET
  displayName: GitHub Webhook Secret
  description: A secret string used to configure the GitHub webhook.
  generate: expression
  from: "[a-zA-Z0-9]{40}"
- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  required: True
  value: postgresql
